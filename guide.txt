Auf https://github.com/TransparencyTango/tangorithm gehen.
Branch auf caras_variation_testing stellen. (siehe Bild bei Telegram)
Code herunterladen. (siehe Bild bei Telegram)
Code eventuell entpacken.

Anaconda installieren.
https://www.anaconda.com/distribution/

Das Anaconda Prompt öffnen (sieht aus wie ein Terminal/eine Shell).

Ein neues Environment mit dem Namen <mirror-env> erstellen:
$ conda create -n mirror-env

Neues Environment aktivieren
$ conda activate mirror-env

Libs installieren:

$ conda install flask
$ conda install numpy
$ conda install pandas
$ conda install scikit-learn

Umgebungsvariablen setzen
$ conda env config vars set FLASK_APP=backend
$ conda env config vars set FLASK_ENV=development

conda config --help

 --env                 Write to the active conda environment .condarc file
                        (/Users/caraceline/opt/anaconda3). If no environment
                        is active, write to the user config file
                        (/Users/caraceline/.condarc).
conda config --env --set FLASK_APP 'backend'

 --set KEY VALUE       Set a boolean or string key 

(mirror-env) bash-3.2$ export FLASK_APP=backend
(mirror-env) bash-3.2$ export FLASK_ENV=development


//ToDo: Glove runterladen

in den Backendserver navigieren:
$ cd tangorithm/backend

Glove vorprozessieren:
$ python glove_cleaner.py

Einen neuen Ordner "letterCache" in tangorithm/backend anlegen: backend/letterCache
Folgende Dateien nach letterCache kopieren: cleaned_glove.6B.50d.txt, a.txt, b.txt, ..., z.txt






######################
# Anwendung starten. #
######################
Das Anaconda Prompt öffnen.
In den "/tangorithm" Ordner navigieren (mit cd <..>)

(Environment aktivieren, falls nötig
$ conda activate mirror-env)

$ export FLASK_APP=backend
$ export FLASK_ENV=development

Server starten
$ python -m flask run
python -m flask run --host 0.0.0.0

... warten, bis im Terminal "initialized" steht

Webseite öffnen (unter  http://127.0.0.1:5000/inputPage)

Zeilenweise erwünschte Wörter eingeben. Auf Senden klicken. Warten.
Es erscheint die größte Übereinstimmung aus 
"backend/result_stereotypes/stereotypen_profession.txt" und 
"backend/result_stereotypes/stereotypen_politics.txt" und 
"backend/result_stereotypes/stereotypen_success.txt"

_____________________________________________________________

Wenn du diese Dateien änderst musst du vorher im Ordner tangorithm alle Dateien mit averageVectors*, modelDescriptions* und unknowntags* löschen.
_____________________________________________________________
Die erscheinenden schmucklosen Zahlen sind die Similarities.
Für Neighbours runter scrollen.

Falls du andere similarities testen möchtest, in der Datei backend/similarities_keys.json ändern. 
Dann den Server neu starten.